<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin require-restart="false">
    <!-- Unique identifier of the plugin. It should be FQN. It cannot be changed between the plugin versions. -->
    <id>com.doktech.dokTechCodeFormatPlugin</id>

    <!-- Public plugin name should be written in Title Case.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-name -->
    <name>Dok Code Refactor</name>

    <!-- A displayed Vendor name or Organization ID displayed on the Plugins Page. -->
    <vendor email="dononcharles@gmail.com" url="https://www.dok-tech.com">DOK TECH</vendor>

    <!-- Description of the plugin displayed on the Plugin Page and IDE Plugin Manager.
         Simple HTML elements (text formatting, paragraphs, and lists) can be added inside of <![CDATA[ ]]> tag.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-description -->
    <description><![CDATA[
    This plugin helps to rename Kotlin classes parameters to match the regular expression ^`?[_a-z][a-zA-Z0-9]*`?$. It makes also the class content better readable by applying a format style.<br>
    <em>It's useful to respect syntax, have code cleaned and successfully pass the continuous integrated code analyzer pipeline.</em>
    <p>It supports Java 11</p>
    <b>Shared naming conventions allow teams to collaborate effectively.</b>
  ]]></description>

    <!-- Product and plugin compatibility requirements.
        Read more: https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html -->
    <depends>com.intellij.modules.platform</depends>

    <!-- Extension points defined by the plugin.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-extension-points.html -->
    <extensions defaultExtensionNs="com.intellij">

    </extensions>

    <actions>
        <action
                id="com.doktech.doktechcodeformatplugin.action.PopupDialogAction"
                class="com.doktech.doktechcodeformatplugin.action.DokTechCodeFormat"
                text="Class Refactor with Dok"
                description="Dok Code Refactor renames parameters to match the regular expression ^`?[_a-z][a-zA-Z0-9]*`?$"
                icon="AllIcons.Actions.Lightning">
            <override-text place="MainMenu" text="Refactor with Dok"/>
            <keyboard-shortcut first-keystroke="control alt D" keymap="$default" second-keystroke="K"/>
            <mouse-shortcut keymap="$default" keystroke="control button3 doubleClick"/>
            <add-to-group group-id="CodeMenu" anchor="last"/>
        </action>

    </actions>
</idea-plugin>